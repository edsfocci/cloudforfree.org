package ShinyCMS_dependencies;
    BEGIN {
print {*STDERR} '<<< DEBUG >>> in ShinyCMS_dependencies, BEGIN DEPS...', "\n";

        use strict;
        use warnings;
        use lib '/home/wbraswell/public_html/cloudforfree.org-latest/lib';  # ShinyCMS
        use lib '/home/wbraswell/perl5/lib/perl5';  # local::lib, Catalyst, Moose, etc.
#        use B::Hooks::OP::Check;

        use APR;
        use APR::Table;
        use APR::XSLoader;
        use Apache2::CmdParms;
        use Apache2::Const;
        use Apache2::Directive;
        use Apache2::Log;
        use Apache2::PerlSections;
        use Apache2::RequestIO;
        use Apache2::RequestRec;
        use Apache2::RequestUtil;
        use Apache2::Response;
        use Apache2::ServerRec;
        use Apache2::ServerUtil;
        use Apache2::XSLoader;
        use B;
        use B::Hooks::EndOfScope;
        use B::Hooks::EndOfScope::XS;
        use B::Hooks::OP::Check;
        use CGI::Simple::Cookie;
        use CGI::Simple::Util;
        use Captcha::reCAPTCHA;
        use Carp;
        use Carp::Clan;
        use Carp::Heavy;
        use Catalyst;
        use Catalyst::Action;
        use Catalyst::Action::RenderView;
        use Catalyst::ActionChain;
        use Catalyst::ActionContainer;
        use Catalyst::Authentication::Credential::Password;
        use Catalyst::Authentication::Realm;
        use Catalyst::Authentication::Realm::SimpleDB;
        use Catalyst::Authentication::Store::DBIx::Class;
        use Catalyst::Authentication::Store::DBIx::Class::User;
        use Catalyst::Authentication::User;
        use Catalyst::ClassData;
        use Catalyst::Component;
        use Catalyst::Component::ApplicationAttribute;
        use Catalyst::Controller;
        use Catalyst::DispatchType;
        use Catalyst::DispatchType::Chained;
        use Catalyst::DispatchType::Default;
        use Catalyst::DispatchType::Index;
        use Catalyst::DispatchType::Path;
        use Catalyst::Dispatcher;
        use Catalyst::Engine;
        use Catalyst::EngineLoader;
        use Catalyst::Exception;
        use Catalyst::Exception::Base;
        use Catalyst::Exception::Basic;
        use Catalyst::Exception::Detach;
        use Catalyst::Exception::Go;
        use Catalyst::Exception::Interface;
        use Catalyst::Log;
        use Catalyst::Middleware::Stash;
        use Catalyst::Model;
        use Catalyst::Model::DBIC::Schema;
        use Catalyst::Model::DBIC::Schema::Types;
        use Catalyst::Plugin::Authentication;
        use Catalyst::Plugin::ConfigLoader;
        use Catalyst::Plugin::Session;
        use Catalyst::Plugin::Session::State;
        use Catalyst::Plugin::Session::State::Cookie;
        use Catalyst::Plugin::Session::Store;
        use Catalyst::Plugin::Session::Store::DBIC;
        use Catalyst::Plugin::Session::Store::DBIC::Delegate;
        use Catalyst::Plugin::Session::Store::Delegate;
        use Catalyst::Plugin::Static::Simple;
        use Catalyst::Request;
        use Catalyst::Request::PartData;
        use Catalyst::Request::Upload;
        use Catalyst::Response;
        use Catalyst::Response::Writer;
        use Catalyst::Runtime;
        use Catalyst::Stats;
        use Catalyst::TraitFor::Request::BrowserDetect;
        use Catalyst::Utils;
        use Catalyst::View;
        use Catalyst::View::Email;
        use Catalyst::View::Email::Template;
        use Catalyst::View::TT;
        use CatalystX::Component::Traits;
        use CatalystX::RoleApplicator;
        use Class::Accessor;
        use Class::Accessor::Fast;
        use Class::Accessor::Grouped;
        use Class::C3::Adopt::NEXT;
        use Class::C3::Componentised;
        use Class::Data::Inheritable;
        use Class::ErrorHandler;
        use Class::Inspector;
        use Class::Load;
        use Class::Load::XS;
        use Class::MOP;
        use Class::MOP::Attribute;
        use Class::MOP::Class;
        use Class::MOP::Class::Immutable::Class::MOP::Class;
        use Class::MOP::Class::Immutable::CustomTrait::Class::MOP::Class::Immutable::Trait::ForMetaClass::Moose::Meta::Class;
        use Class::MOP::Class::Immutable::Moose::Meta::Class;
#        use Class::MOP::Class::Immutable::Moose::Meta::Class::__ANON__::SERIAL::1;
#        use Class::MOP::Class::Immutable::Moose::Meta::Class::__ANON__::SERIAL::11;
#        use Class::MOP::Class::Immutable::Moose::Meta::Class::__ANON__::SERIAL::14;
        use Class::MOP::Class::Immutable::Trait;
        use Class::MOP::Deprecated;
        use Class::MOP::Instance;
        use Class::MOP::Method;
        use Class::MOP::Method::Accessor;
        use Class::MOP::Method::Constructor;
        use Class::MOP::Method::Generated;
        use Class::MOP::Method::Inlined;
        use Class::MOP::Method::Meta;
        use Class::MOP::Method::Wrapped;
        use Class::MOP::MiniTrait;
        use Class::MOP::Mixin;
        use Class::MOP::Mixin::AttributeCore;
        use Class::MOP::Mixin::HasAttributes;
        use Class::MOP::Mixin::HasMethods;
        use Class::MOP::Mixin::HasOverloads;
        use Class::MOP::Module;
        use Class::MOP::Object;
        use Class::MOP::Overload;
        use Class::MOP::Package;
        use Class::Method::Modifiers;
        use Class::Singleton;
        use Class::Struct;
        use Class::Trigger;
        use Class::XSAccessor;
        use Class::XSAccessor::Heavy;
        use Compress::Raw::Zlib;
        use Compress::Zlib;
        use Config;
        use Config::Any;
        use Config::Any::Base;
        use Config::Any::General;
        use Config::Any::INI;
        use Config::Any::JSON;
        use Config::Any::Perl;
        use Config::Any::XML;
        use Config::Any::YAML;
        use Config::General;
        use Config::General::Interpolated;
#        use Config_git;
#        use Config_heavy;
        use Context::Preserve;
        use Cookie::Baker;
        use Cpanel::JSON::XS;
        use Cwd;
        use DBIx::Class;
        use DBIx::Class::AccessorGroup;
#        use DBIx::Class::Carp;
        use DBIx::Class::Componentised;
        use DBIx::Class::Core;
        use DBIx::Class::Cursor;
        use DBIx::Class::DynamicDefault;
        use DBIx::Class::EncodedColumn;
        use DBIx::Class::EncodedColumn::Digest;
        use DBIx::Class::Exception;
        use DBIx::Class::InflateColumn;
        use DBIx::Class::InflateColumn::DateTime;
        use DBIx::Class::Optional::Dependencies;
        use DBIx::Class::PK;
        use DBIx::Class::PK::Auto;
        use DBIx::Class::Relationship;
        use DBIx::Class::Relationship::Accessor;
        use DBIx::Class::Relationship::Base;
        use DBIx::Class::Relationship::BelongsTo;
        use DBIx::Class::Relationship::CascadeActions;
        use DBIx::Class::Relationship::HasMany;
        use DBIx::Class::Relationship::HasOne;
        use DBIx::Class::Relationship::Helpers;
        use DBIx::Class::Relationship::ManyToMany;
        use DBIx::Class::Relationship::ProxyMethods;
        use DBIx::Class::ResultSet;
        use DBIx::Class::ResultSetColumn;
        use DBIx::Class::ResultSource;
        use DBIx::Class::ResultSource::RowParser;
        use DBIx::Class::ResultSource::RowParser::Util;
        use DBIx::Class::ResultSource::Table;
        use DBIx::Class::ResultSourceHandle;
        use DBIx::Class::ResultSourceProxy;
        use DBIx::Class::ResultSourceProxy::Table;
        use DBIx::Class::Row;
        use DBIx::Class::Schema;
        use DBIx::Class::StartupCheck;
        use DBIx::Class::Storage;
        use DBIx::Class::Storage::BlockRunner;
        use DBIx::Class::Storage::DBI;
        use DBIx::Class::Storage::DBI::Cursor;
        use DBIx::Class::Storage::DBIHacks;
        use DBIx::Class::Storage::TxnScopeGuard;
        use DBIx::Class::TimeStamp;
        use DBIx::Class::_Util;
        use Data::Dump;
        use Data::Dumper;
        use Data::OptList;
        use Data::Visitor;
        use Data::Visitor::Callback;
        use DateTime;
        use DateTime::Duration;
        use DateTime::Format::Mail;
        use DateTime::Format::W3CDTF;
        use DateTime::Helpers;
        use DateTime::Infinite;
        use DateTime::Locale;
        use DateTime::Locale::Data;
        use DateTime::Locale::FromData;
        use DateTime::Locale::Util;
        use DateTime::TimeZone;
        use DateTime::TimeZone::Catalog;
        use DateTime::TimeZone::Floating;
        use DateTime::TimeZone::Local;
        use DateTime::TimeZone::OffsetOnly;
        use DateTime::TimeZone::OlsonDB::Change;
        use DateTime::TimeZone::UTC;
        use DateTime::Types;
        use Devel::Declare;
        use Devel::Declare::Context::Simple;
        use Devel::Declare::MethodInstaller::Simple;
        use Devel::GlobalDestruction;
        use Devel::InnerPackage;
        use Devel::OverloadInfo;
        use Devel::StackTrace;
        use Devel::StackTrace::Frame;
        use Digest;
        use Digest::MD5;
        use Digest::SHA;
        use Digest::base;
        use DynaLoader;
        use Email::Abstract;
        use Email::Abstract::EmailMIME;
        use Email::Abstract::EmailSimple;
        use Email::Abstract::MIMEEntity;
        use Email::Abstract::MailInternet;
        use Email::Abstract::MailMessage;
        use Email::Abstract::Plugin;
        use Email::Address;
        use Email::MIME;
        use Email::MIME::ContentType;
        use Email::MIME::Creator;
        use Email::MIME::Encode;
        use Email::MIME::Encodings;
        use Email::MIME::Header;
        use Email::MIME::Modifier;
        use Email::MessageID;
        use Email::Sender;
        use Email::Sender::Failure;
        use Email::Sender::Failure::Permanent;
        use Email::Sender::Failure::Temporary;
        use Email::Sender::Role::CommonSending;
        use Email::Sender::Simple;
        use Email::Sender::Success;
        use Email::Sender::Transport;
        use Email::Sender::Util;
        use Email::Simple;
        use Email::Simple::Creator;
        use Email::Simple::Header;
        use Email::Valid;
        use Encode;
        use Encode::Alias;
        use Encode::Config;
        use Encode::Encoding;
        use English;
        use Errno;
        use Eval::Closure;
#        use Eval::TypeTiny;
        use Exception::Class;
        use Exception::Class::Base;
        use Exporter;
        use Exporter::Heavy;
        use Exporter::Tiny;
        use Fcntl;
        use Feed::Find;
        use File::Basename;
        use File::Copy;
        use File::Find;
        use File::Glob;
        use File::GlobMapper;
        use File::Path;
        use File::Slurp;
        use File::Spec;
        use File::Spec::Functions;
        use File::Spec::Unix;
        use File::Temp;
        use File::stat;
        use FileHandle;
        use HTML::Element;
        use HTML::Entities;
        use HTML::Parser;
        use HTML::Restrict;
        use HTML::Tagset;
        use HTML::Tiny;
        use HTML::TreeBuilder;
        use HTTP::Body;
        use HTTP::Body::MultiPart;
        use HTTP::Body::OctetStream;
        use HTTP::Body::UrlEncoded;
        use HTTP::Body::XForms;
        use HTTP::Body::XFormsMultipart;
        use HTTP::BrowserDetect;
        use HTTP::Date;
        use HTTP::Entity::Parser;
        use HTTP::Entity::Parser::JSON;
        use HTTP::Entity::Parser::MultiPart;
        use HTTP::Entity::Parser::OctetStream;
        use HTTP::Entity::Parser::UrlEncoded;
        use HTTP::Headers;
        use HTTP::Headers::Fast;
        use HTTP::Message;
        use HTTP::MultiPartParser;
        use HTTP::Request;
        use HTTP::Response;
        use HTTP::Status;
        use Hash::MultiValue;
#        use IO;
        use IO::Compress::Adapter::Deflate;
        use IO::Compress::Base;
        use IO::Compress::Base::Common;
        use IO::Compress::Gzip;
        use IO::Compress::Gzip::Constants;
        use IO::Compress::RawDeflate;
        use IO::Compress::Zlib::Extra;
        use IO::Dir;
        use IO::File;
        use IO::Handle;
        use IO::Seekable;
        use IO::Socket;
        use IO::Socket::INET;
        use IO::Socket::UNIX;
        use IO::Uncompress::Adapter::Inflate;
        use IO::Uncompress::Base;
        use IO::Uncompress::Gunzip;
        use IO::Uncompress::RawInflate;
        use JSON::MaybeXS;
        use LWP;
        use LWP::MemberMixin;
        use LWP::Protocol;
        use LWP::UserAgent;
        use List::MoreUtils;
        use List::MoreUtils::PP;
        use List::MoreUtils::XS;
        use List::Util;
        use MIME::Base64;
        use MIME::QuotedPrint;
        use MIME::Type;
        use MIME::Types;
        use MRO::Compat;
        use Mail::Address;
        use Mail::Header;
        use Mail::Internet;
        use Mail::Util;
        use Method::Generate::Accessor;
        use Method::Generate::Constructor;
        use Method::Signatures::Simple;
        use ModPerl::Const;
        use Module::Find;
        use Module::Implementation;
        use Module::Load;
        use Module::Pluggable;
        use Module::Pluggable::Object;
        use Module::Runtime;
#        use Moo;
##        use Moo::HandleMoose;
##        use Moo::HandleMoose::FakeMetaClass;
#        use Moo::Object;
##        use Moo::Role;
#        use Moo::_Utils;
#        use Moo::_mro;
#        use Moo::_strictures;
#        use Moo::sification;
#        use MooX::Types::MooseLike;
#        use MooX::Types::MooseLike::Base;
        use Moose;
        use Moose::Deprecated;
        use Moose::Exporter;
        use Moose::Meta::Attribute;
        use Moose::Meta::Attribute::Native;
        use Moose::Meta::Attribute::Native::Trait;
        use Moose::Meta::Attribute::Native::Trait::Array;
        use Moose::Meta::Class;
        use Moose::Meta::Class::Immutable::Trait;
#        use Moose::Meta::Class::__ANON__::SERIAL::1;
#        use Moose::Meta::Class::__ANON__::SERIAL::10;
#        use Moose::Meta::Class::__ANON__::SERIAL::11;
#        use Moose::Meta::Class::__ANON__::SERIAL::12;
#        use Moose::Meta::Class::__ANON__::SERIAL::13;
#        use Moose::Meta::Class::__ANON__::SERIAL::14;
#        use Moose::Meta::Class::__ANON__::SERIAL::2;
#        use Moose::Meta::Class::__ANON__::SERIAL::3;
#        use Moose::Meta::Class::__ANON__::SERIAL::4;
#        use Moose::Meta::Class::__ANON__::SERIAL::5;
#        use Moose::Meta::Class::__ANON__::SERIAL::6;
#        use Moose::Meta::Class::__ANON__::SERIAL::7;
#        use Moose::Meta::Class::__ANON__::SERIAL::8;
#        use Moose::Meta::Class::__ANON__::SERIAL::9;
        use Moose::Meta::Instance;
        use Moose::Meta::Method;
        use Moose::Meta::Method::Accessor;
        use Moose::Meta::Method::Accessor::Native;
        use Moose::Meta::Method::Accessor::Native::Array::count;
        use Moose::Meta::Method::Accessor::Native::Array::elements;
        use Moose::Meta::Method::Accessor::Native::Reader;
        use Moose::Meta::Method::Augmented;
        use Moose::Meta::Method::Constructor;
        use Moose::Meta::Method::Delegation;
        use Moose::Meta::Method::Destructor;
        use Moose::Meta::Method::Meta;
        use Moose::Meta::Method::Overridden;
        use Moose::Meta::Mixin::AttributeCore;
        use Moose::Meta::Object::Trait;
        use Moose::Meta::Role;
        use Moose::Meta::Role::Application;
        use Moose::Meta::Role::Application::RoleSummation;
        use Moose::Meta::Role::Application::ToClass;
        use Moose::Meta::Role::Application::ToInstance;
        use Moose::Meta::Role::Application::ToRole;
        use Moose::Meta::Role::Attribute;
        use Moose::Meta::Role::Composite;
        use Moose::Meta::Role::Method;
        use Moose::Meta::Role::Method::Conflicting;
        use Moose::Meta::Role::Method::Required;
        use Moose::Meta::TypeCoercion;
        use Moose::Meta::TypeCoercion::Union;
        use Moose::Meta::TypeConstraint;
        use Moose::Meta::TypeConstraint::Class;
        use Moose::Meta::TypeConstraint::DuckType;
        use Moose::Meta::TypeConstraint::Enum;
        use Moose::Meta::TypeConstraint::Parameterizable;
        use Moose::Meta::TypeConstraint::Parameterized;
        use Moose::Meta::TypeConstraint::Registry;
        use Moose::Meta::TypeConstraint::Role;
        use Moose::Meta::TypeConstraint::Union;
        use Moose::Object;
#        use Moose::Role;
        use Moose::Util;
        use Moose::Util::MetaRole;
        use Moose::Util::TypeConstraints;
        use Moose::Util::TypeConstraints::Builtins;
        use MooseX::Emulate::Class::Accessor::Fast;
        use MooseX::Emulate::Class::Accessor::Fast::Meta::Accessor;
        use MooseX::Emulate::Class::Accessor::Fast::Meta::Role::Attribute;
#        use MooseX::MarkAsMethods;
#        use MooseX::MarkAsMethods::MetaRole::MethodMarker;
        use MooseX::MethodAttributes;
#        use MooseX::MethodAttributes::Role;
#        use MooseX::MethodAttributes::Role::AttrContainer;
#        use MooseX::MethodAttributes::Role::AttrContainer::Inheritable;
#        use MooseX::MethodAttributes::Role::Meta::Class;
#        use MooseX::MethodAttributes::Role::Meta::Map;
#        use MooseX::MethodAttributes::Role::Meta::Method;
#        use MooseX::MethodAttributes::Role::Meta::Method::MaybeWrapped;
#        use MooseX::MethodAttributes::Role::Meta::Method::Wrapped;
#        use MooseX::MethodAttributes::Role::Meta::Role;
#        use MooseX::MethodAttributes::Role::Meta::Role::Application;
#        use MooseX::NonMoose;
#        use MooseX::NonMoose::Meta::Role::Class;
#        use MooseX::NonMoose::Meta::Role::Constructor;
        use MooseX::RelatedClassRoles;
#        use MooseX::RelatedClassRoles::__ANON__::SERIAL::1;
#        use MooseX::RelatedClassRoles::__ANON__::SERIAL::2;
#        use MooseX::RelatedClassRoles::__ANON__::SERIAL::3;
#        use MooseX::RelatedClassRoles::__ANON__::SERIAL::4;
#        use MooseX::RelatedClassRoles::__ANON__::SERIAL::5;
#        use MooseX::Role::Parameterized;
#        use MooseX::Role::Parameterized::Meta::Role::Parameterized;
#        use MooseX::Role::Parameterized::Meta::Trait::Parameterizable;
#        use MooseX::Role::Parameterized::Meta::Trait::Parameterized;
#        use MooseX::Role::Parameterized::Parameters;
#        use MooseX::Role::WithOverloading;
#        use MooseX::Role::WithOverloading::Meta::Role;
#        use MooseX::Role::WithOverloading::Meta::Role::Application;
#        use MooseX::Role::WithOverloading::Meta::Role::Application::Composite;
#        use MooseX::Role::WithOverloading::Meta::Role::Application::Composite::ToClass;
#        use MooseX::Role::WithOverloading::Meta::Role::Application::Composite::ToInstance;
#        use MooseX::Role::WithOverloading::Meta::Role::Application::Composite::ToRole;
#        use MooseX::Role::WithOverloading::Meta::Role::Application::FixOverloadedRefs;
#        use MooseX::Role::WithOverloading::Meta::Role::Application::ToClass;
#        use MooseX::Role::WithOverloading::Meta::Role::Application::ToInstance;
#        use MooseX::Role::WithOverloading::Meta::Role::Application::ToRole;
#        use MooseX::Role::WithOverloading::Meta::Role::Composite;
        use MooseX::Traits::Pluggable;
        use MooseX::Types;
        use MooseX::Types::Base;
        use MooseX::Types::CheckedUtilExports;
        use MooseX::Types::LoadableClass;
        use MooseX::Types::Moose;
        use MooseX::Types::TypeDecorator;
        use MooseX::Types::UndefinedType;
        use MooseX::Types::Util;
        use NEXT;
        use Object::Signature;
        use POSIX;
#        use Package::DeprecationManager;
        use Package::Stash;
        use Package::Stash::XS;
        use Params::Util;
        use Params::Validate;
        use Params::Validate::Constants;
        use Params::Validate::XS;
        use Params::ValidationCompiler;
        use Params::ValidationCompiler::Compiler;
        use Params::ValidationCompiler::Exceptions;
        use Path::Class;
        use Path::Class::Dir;
        use Path::Class::Entity;
        use Path::Class::File;
        use PerlIO;
        use PerlIO::encoding;
        use Plack::Component;
        use Plack::Handler::Apache2;
        use Plack::Loader;
        use Plack::Middleware;
        use Plack::Middleware::Conditional;
        use Plack::Middleware::ContentLength;
        use Plack::Middleware::FixMissingBodyInRedirect;
        use Plack::Middleware::HTTPExceptions;
        use Plack::Middleware::Head;
        use Plack::Middleware::IIS6ScriptNameFix;
        use Plack::Middleware::IIS7KeepAliveFix;
        use Plack::Middleware::LighttpdScriptNameFix;
        use Plack::Middleware::MethodOverride;
        use Plack::Middleware::RemoveRedundantBody;
        use Plack::Middleware::ReverseProxy;
        use Plack::Request;
        use Plack::Request::Upload;
        use Plack::Util;
        use Plack::Util::Accessor;
#        use Role::Tiny;
        use Role::Tiny::With;
        use SQL::Abstract;
        use Safe::Isa;
        use Scalar::Util;
        use SelectSaver;
        use ShinyCMS;
        use ShinyCMS::Controller;
        use ShinyCMS::Controller::Admin::Blog;
        use ShinyCMS::Controller::Admin::Events;
        use ShinyCMS::Controller::Admin::FileManager;
        use ShinyCMS::Controller::Admin::Form;
        use ShinyCMS::Controller::Admin::Forums;
        use ShinyCMS::Controller::Admin::News;
        use ShinyCMS::Controller::Admin::Newsletters;
        use ShinyCMS::Controller::Admin::Pages;
        use ShinyCMS::Controller::Admin::Polls;
        use ShinyCMS::Controller::Admin::SharedContent;
        use ShinyCMS::Controller::Admin::Shop;
        use ShinyCMS::Controller::Admin::User;
        use ShinyCMS::Controller::Blog;
        use ShinyCMS::Controller::Code;
        use ShinyCMS::Controller::Discussion;
        use ShinyCMS::Controller::Events;
        use ShinyCMS::Controller::FileServer;
        use ShinyCMS::Controller::Form;
        use ShinyCMS::Controller::Forums;
        use ShinyCMS::Controller::News;
        use ShinyCMS::Controller::Newsletters;
        use ShinyCMS::Controller::Pages;
        use ShinyCMS::Controller::PaymentHandler::PhysicalGoods::CCBill;
        use ShinyCMS::Controller::PaymentHandler::Subscription::CCBill;
        use ShinyCMS::Controller::Polls;
        use ShinyCMS::Controller::Root;
        use ShinyCMS::Controller::Shop;
        use ShinyCMS::Controller::Shop::Basket;
        use ShinyCMS::Controller::Shop::Checkout;
        use ShinyCMS::Controller::Tag;
        use ShinyCMS::Controller::User;
        use ShinyCMS::Model::DB;
        use ShinyCMS::Model::FilterHTML;
        use ShinyCMS::Schema;
        use ShinyCMS::Schema::Result::Access;
        use ShinyCMS::Schema::Result::Autoresponder;
        use ShinyCMS::Schema::Result::AutoresponderEmail;
        use ShinyCMS::Schema::Result::AutoresponderEmailElement;
        use ShinyCMS::Schema::Result::Basket;
        use ShinyCMS::Schema::Result::BasketItem;
        use ShinyCMS::Schema::Result::BasketItemAttribute;
        use ShinyCMS::Schema::Result::Blog;
        use ShinyCMS::Schema::Result::BlogPost;
        use ShinyCMS::Schema::Result::CmsForm;
        use ShinyCMS::Schema::Result::CmsPage;
        use ShinyCMS::Schema::Result::CmsPageElement;
        use ShinyCMS::Schema::Result::CmsSection;
        use ShinyCMS::Schema::Result::CmsTemplate;
        use ShinyCMS::Schema::Result::CmsTemplateElement;
        use ShinyCMS::Schema::Result::Comment;
        use ShinyCMS::Schema::Result::CommentLike;
        use ShinyCMS::Schema::Result::Confirmation;
        use ShinyCMS::Schema::Result::Discussion;
        use ShinyCMS::Schema::Result::Event;
        use ShinyCMS::Schema::Result::Feed;
        use ShinyCMS::Schema::Result::FeedItem;
        use ShinyCMS::Schema::Result::FileAccess;
        use ShinyCMS::Schema::Result::Forum;
        use ShinyCMS::Schema::Result::ForumPost;
        use ShinyCMS::Schema::Result::ForumSection;
        use ShinyCMS::Schema::Result::Gallery;
        use ShinyCMS::Schema::Result::Image;
        use ShinyCMS::Schema::Result::MailRecipient;
        use ShinyCMS::Schema::Result::MailingList;
        use ShinyCMS::Schema::Result::NewsItem;
        use ShinyCMS::Schema::Result::Newsletter;
        use ShinyCMS::Schema::Result::NewsletterElement;
        use ShinyCMS::Schema::Result::NewsletterTemplate;
        use ShinyCMS::Schema::Result::NewsletterTemplateElement;
        use ShinyCMS::Schema::Result::Order;
        use ShinyCMS::Schema::Result::OrderItem;
        use ShinyCMS::Schema::Result::OrderItemAttribute;
        use ShinyCMS::Schema::Result::PaidList;
        use ShinyCMS::Schema::Result::PaidListEmail;
        use ShinyCMS::Schema::Result::PaidListEmailElement;
        use ShinyCMS::Schema::Result::PollAnonVote;
        use ShinyCMS::Schema::Result::PollAnswer;
        use ShinyCMS::Schema::Result::PollQuestion;
        use ShinyCMS::Schema::Result::PollUserVote;
        use ShinyCMS::Schema::Result::PostageOption;
        use ShinyCMS::Schema::Result::QueuedEmail;
        use ShinyCMS::Schema::Result::QueuedPaidEmail;
        use ShinyCMS::Schema::Result::Role;
        use ShinyCMS::Schema::Result::Session;
        use ShinyCMS::Schema::Result::SharedContent;
        use ShinyCMS::Schema::Result::ShopCategory;
        use ShinyCMS::Schema::Result::ShopItem;
        use ShinyCMS::Schema::Result::ShopItemCategory;
        use ShinyCMS::Schema::Result::ShopItemElement;
        use ShinyCMS::Schema::Result::ShopItemLike;
        use ShinyCMS::Schema::Result::ShopItemPostageOption;
        use ShinyCMS::Schema::Result::ShopProductType;
        use ShinyCMS::Schema::Result::ShopProductTypeElement;
        use ShinyCMS::Schema::Result::Subscription;
        use ShinyCMS::Schema::Result::Tag;
        use ShinyCMS::Schema::Result::Tagset;
        use ShinyCMS::Schema::Result::TransactionLog;
        use ShinyCMS::Schema::Result::User;
        use ShinyCMS::Schema::Result::UserAccess;
        use ShinyCMS::Schema::Result::UserIpAddress;
        use ShinyCMS::Schema::Result::UserRole;
        use ShinyCMS::View::Email;
        use ShinyCMS::View::Email::Template;
        use ShinyCMS::View::HTML;
        use Socket;
        use Specio;
        use Specio::Coercion;
        use Specio::Constraint::AnyCan;
        use Specio::Constraint::Enum;
        use Specio::Constraint::ObjectCan;
        use Specio::Constraint::ObjectIsa;
        use Specio::Constraint::Parameterizable;
        use Specio::Constraint::Parameterized;
        use Specio::Constraint::Role::CanType;
        use Specio::Constraint::Role::Interface;
        use Specio::Constraint::Role::IsaType;
        use Specio::Constraint::Simple;
        use Specio::Constraint::Union;
        use Specio::Declare;
        use Specio::DeclaredAt;
        use Specio::Exception;
        use Specio::Exporter;
        use Specio::Helpers;
#        use Specio::Library::Builtins;
#        use Specio::Library::Numeric;
#        use Specio::Library::String;
        use Specio::OO;
        use Specio::PartialDump;
        use Specio::Registry;
        use Specio::Role::Inlinable;
        use Specio::TypeChecks;
        use StackTrace::Auto;
        use Storable;
        use Stream::Buffered;
        use Stream::Buffered::Auto;
        use Stream::Buffered::File;
        use Stream::Buffered::PerlIO;
        use String::RewritePrefix;
        use Sub::Defer;
        use Sub::Exporter;
        use Sub::Exporter::ForMethods;
        use Sub::Exporter::Progressive;
        use Sub::Exporter::Util;
        use Sub::Identify;
        use Sub::Install;
        use Sub::Name;
        use Sub::Quote;
        use Sub::Util;
        use Symbol;
        use Template;
        use Template::Base;
        use Template::Config;
        use Template::Constants;
        use Template::Context;
        use Template::Directive;
        use Template::Document;
        use Template::Exception;
        use Template::Filters;
        use Template::Grammar;
        use Template::Iterator;
        use Template::Parser;
        use Template::Plugins;
        use Template::Provider;
        use Template::Service;
        use Template::Stash;
        use Template::Stash::XS;
        use Template::Timer;
        use Template::VMethods;
        use Text::CSV::Simple;
        use Text::CSV_XS;
        use Text::SimpleTable;
        use Throwable;
        use Throwable::Error;
        use Tie::Hash;
        use Tie::Hash::NamedCapture;
        use Tie::RefHash;
        use Tie::ToObject;
        use Time::HiRes;
        use Time::Local;
        use Tree::Simple;
        use Tree::Simple::Visitor;
        use Tree::Simple::Visitor::FindByPath;
        use Tree::Simple::Visitor::FindByUID;
        use Try::Tiny;
        use Type::Coercion;
        use Type::Library;
        use Type::Tiny;
        use Type::Tiny::Union;
        use Types::Standard;
        use Types::TypeTiny;
        use URI;
        use URI::Escape;
        use URI::Fetch;
        use URI::Fetch::Response;
        use URI::QueryParam;
        use URI::_generic;
        use URI::_query;
        use URI::_server;
        use URI::http;
        use URI::https;
        use Variable::Magic;
        use WWW::Form::UrlEncoded;
        use WWW::Form::UrlEncoded::PP;
        use XML::Atom;
        use XML::Atom::Base;
        use XML::Atom::Category;
        use XML::Atom::Content;
        use XML::Atom::Entry;
        use XML::Atom::ErrorHandler;
        use XML::Atom::Feed;
        use XML::Atom::Link;
        use XML::Atom::Person;
        use XML::Atom::Thing;
        use XML::Atom::Util;
        use XML::Feed;
        use XML::Feed::Content;
        use XML::Feed::Enclosure;
        use XML::Feed::Entry;
        use XML::Feed::Entry::Format::Atom;
        use XML::Feed::Entry::Format::RSS;
        use XML::Feed::Format::Atom;
        use XML::Feed::Format::RSS;
        use XML::LibXML;
        use XML::LibXML::AttributeHash;
        use XML::LibXML::Boolean;
        use XML::LibXML::Error;
        use XML::LibXML::Literal;
        use XML::LibXML::NodeList;
        use XML::LibXML::Number;
        use XML::LibXML::XPathContext;
        use XML::SAX::Exception;
        use XSLoader;
#        use aliased;
#        use attributes;
#        use base;
#        use bytes;
#        use constant;
#        use deprecate;
##        use if;
#        use integer;
#        use lib;
#        use locale;
#        use metaclass;
#        use mod_perl;
#        use mod_perl2;
#        use mro;
#        use namespace::autoclean;
#        use namespace::clean;
#        use namespace::clean::_Util;
#        use overload;
#        use overloading;
#        use parent;
#        use re;
#        use strict;
#        use subs;
##        use unicore::Heavy;
##        use unicore::lib::Perl::Print;
#        use utf8;
##        use utf8_heavy;
#        use vars;
#        use warnings;
#        use warnings::register;

print {*STDERR} '<<< DEBUG >>> in ShinyCMS_dependencies, END DEPS...', "\n";
    }

1;
